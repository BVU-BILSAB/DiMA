# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          overide: true

    - name: Build Python package
      if: matrix.os != 'ubuntu-latest'
      run: poetry run maturin build --release --no-sdist --strip --interpreter python${{matrix.python_version}}

    - name: Build Python package
      if: matrix.os == 'ubuntu-latest'
      run: docker run --rm -v $(pwd):/io konstin2/maturin build --release --no-sdist --strip --interpreter python${{matrix.python_version}}

    - name: List wheels
      if: matrix.os == 'windows-latest'
      run: dir target\wheels\

    - name: List wheels
      if: matrix.os != 'windows-latest'
      run: find ./target/wheels/

    - name: PyPi publish
      env:
        MATURIN_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        ls -lh
        ls -lh /target
        ls -lh /target/wheels
        poetry run maturin publish --username __token__
